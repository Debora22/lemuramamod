'use strict';

var componentController = [
    '$scope',
    'EXTERNAL_TRACKING_EVENTS',
    function(
        $scope,
        EXTERNAL_TRACKING_EVENTS
    ) {
        var ctrl = this;

        /**
         * @name updateFilter
         *
         * @description Update the NSFW filter value and refresh the displayed media
         */
        ctrl.updateFilter = function(value) {
            // If slider value is 0, we must not apply nsfw filter
            if (value > 0) {
                //Max value is always 1, since the range we want to display is
                //from what user sets to the max probability of NSFW
                ctrl.filtersService.query.filters.nsfw = {
                    values: {
                        range: {
                            min: value,
                            max: 1
                        }
                    }
                };
            } else {
                delete ctrl.filtersService.query.filters.nsfw;
            }

            // Emit event hit to externalTracking API
            $scope.$emit(EXTERNAL_TRACKING_EVENTS.filters.hit, 'nsfwFilter');

            ctrl.filtersService.callbacks.onChange();
        };
}];

/**
 * @ngdoc component
 * @name uiwNsfwFilter
 *
 * @description This component displays the NSFW filter
 * @param {Object} filtersServices the filter service generated by MasterMind. It requires to have a reference in order
 * to be able to update the filter
 */
angular.module('uiWidgets')
.component('uiwNsfwFilter', {
    templateUrl: 'uiWidgets/nsfwFilter/nsfwFilter.html',
    controller: componentController,
    bindings: {
        //TODO: we need to cut the filterService out from MasterMind.
        //Once we have that done, we can inject the service instead of passing it as a binding
        filtersService: '<'
    }
});
